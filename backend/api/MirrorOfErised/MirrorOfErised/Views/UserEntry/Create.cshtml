@using MirrorOfErised.models
@model MirrorOfErised.ViewModels.UserEntryCreateViewModel
@{
    ViewData["Title"] = "Setup user profile";
}

<link rel="stylesheet" href="/css/dropzone.min.css" />
<link rel="stylesheet" href="/css/basic.min.css" />

<h1>Setup your user profile</h1>
<hr />

<div class="row">
    <div class="col-md">
        <p>Upload some images of yourself.</p>
        <small class="form-text text-muted">We need at least 3 pictures of you. Your uploaded picture should only contain your face and should not be grayscaled.</small>
        <form action="/UserEntry/Upload" method="post" id="dropzone">
            
        </form>
        <span class="text-danger">@ViewBag.imageError</span>
        <form asp-action="Create" method="post">
            <div>
                <span asp-validation-summary="All" class="text-danger"></span>
            </div>
            <div class="form-group d-none" id="js-commute-car">
                <fieldset>
                    <legend>Your address</legend>
                    <small id="addressHelp" class="form-text text-muted">
                        We use this to give you real-time updates of traffic when you're on your way home.
                        You can leave this empty.
                    </small>
                    <label asp-for="Street" class="control-label"></label>
                    <input asp-for="Street" class="form-control"/>
                    <span asp-validation-for="Street" class="text-danger"></span>

                    <label asp-for="City" class="control-label"></label>
                    <input asp-for="City" input="text" class="form-control"/>
                    <span asp-validation-for="City" class="text-danger"></span>
                    
                    <label asp-for="ZipCode" class="control-label"></label>
                    <input asp-for="ZipCode" input="text" class="form-control"/>
                    <span asp-validation-for="ZipCode" class="text-danger"></span>
                </fieldset>
            </div>
            <div class="form-group d-none" id="js-commute-train">
                <fieldset>
                    <legend>Departing station</legend>
                    <small id="trainHelp" class="form-text text-muted">
                        We use this to give you real-time updates of the current train schedule.
                        You can leave this empty.
                    </small>
                    <label asp-for="TrainCity" class="control-label"></label>
                    <input asp-for="TrainCity" class="form-control"/>
                    <span asp-validation-for="City" class="text-danger"></span>
                </fieldset>
            </div>
            <div class="form-group">
                <label asp-for="CommutingWay" class="control-label"></label>
                <select asp-for="CommutingWay" id="js-commuting" class="form-control"
                        asp-items="Html.GetEnumSelectList<CommutingOption>()">
                    <option>Select a commute type</option>
                </select>
                <span asp-validation-for="CommutingWay" class="text-danger"></span>
            </div>
            <div class="form-group">
                <fieldset>
                    <legend>Integration options</legend>
                    <label asp-for="Assistant">
                        <input type="checkbox" asp-for="Assistant">
                    </label>
                    <label asp-for="Calendar">
                        <input type="checkbox" asp-for="Calendar">
                    </label>
                    <label asp-for="Commute">
                        <input type="checkbox" asp-for="Commute">
                    </label>
                </fieldset>
            </div>
            <span class="text-danger">@ViewBag.error</span>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>

        </form>
    </div>
</div>

@section Scripts {
    <script src="/js/dropzone.min.js"></script>
    <script>
        $(document).ready(function () {
            function showFieldSet(id) {
                const options = ['train', 'car', 'other']
                const selectedOption = options[id];
                options.map(option => {
                    if (option === selectedOption)
                        $(`#js-commute-${option}`).removeClass('d-none');
                    else
                        $(`#js-commute-${option}`).addClass('d-none');

                })
            }
            $('#js-commuting').on('change', function(e) {
                showFieldSet(e.target.value);
            });
            
            //Dropzone
            const dropzone = new Dropzone('#dropzone', {
                url: '/UserEntry/Upload',
                paramName: 'image', 
                maxFilesize: 5,
                init: function () {
                    $('#dropzone').addClass('dropzone');
                    this.on('complete', function(file) {
                        console.log(file);
                        if (file.status === 'error' && file.xhr.status === 400) {
                            file.previewElement.style.border = '1px solid red';
                            file.previewElement.children[3].innerHTML = 'Invalid image.';
                        }
                    })
                }
            });
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
